let express,join,createWriteStream,morgan,session,compression,home,admin,api;_c79‍.w("express",[["default",["express"],function(v){express=v}]]);_c79‍.w("path",[["join",["join"],function(v){join=v}]]);_c79‍.w("fs",[["createWriteStream",["createWriteStream"],function(v){createWriteStream=v}]]);_c79‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_c79‍.w("express-session",[["default",["session"],function(v){session=v}]]);_c79‍.w("compression",[["default",["compression"],function(v){compression=v}]]);_c79‍.w("./routes/home",[["default",["home"],function(v){home=v}]]);_c79‍.w("./routes/admin",[["default",["admin"],function(v){admin=v}]]);_c79‍.w("./routes/api",[["default",["api"],function(v){api=v}]]);
 








// import { homePage, food, meet } from "./content";
const app = express()
const logFile = join(__dirname, "blogchef.log");

app.use(compression())
// Middleware (serving static assest)
app.use("/assets", express.static(join(__dirname, "public")))
app.use(express.urlencoded({ extended: false }))
app.use(express.json())
app.use("/admin", session({
    name: "sessId",
    resave: false,
    saveUninitialized: true,
    secret: app.get("env") === "production" ? process.env.sessionSecret : "2bb375d5abe58776bbf28695",
    cookie: {
        httpOnly: true,
        maxAge: 18000000,
        secure: app.get("env") === "production" ? true : false
    }
}))
app.use(morgan(":method - :url - :date - :response-time ms"));
app.use(
  morgan(":method - :url - :date - :response-time ms", {
    stream: createWriteStream(logFile, { flags: "a" }),
  })
);
app.set("view engine", "pug")

app.use("/", home)
app.use("/admin", admin)
app.use("/api". api)



app.listen(3000, () => console.log("Blog chef is cooking on port 3000"))     

